@model ExpressQuiz.ViewModels.ActiveQuizViewModel

@*@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@


@Scripts.Render("~/Scripts/jquery.bootpag.min.js")

@Scripts.Render("~/bundles/expressquiz")



<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<link href="~/Scripts/pagedown/css/jquery.pagedown-bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/pagedown/js/jquery.pagedown-bootstrap.combined.min.js"></script>

<div>
    <br />

    <div class="text-center" >

        <button id="done" type="button" class="btn btn-lg btn-primary">Finish</button>
        <h4 id="pTimeLeft">
        </h4>
    

    </div>
    <br />
    <div class="progress">
        <div id="prgCompleted" class="progress-bar" style="width: 0%;"></div>
    </div>

    <div id="page-selection"></div>
    <div id="content">

        <h4>Question</h4>
        <textarea class="pagedown hidden"  >
           
          
        </textarea>
      
        <h4>Answers</h4>
        <p>
            <div id="answers" class="col-lg-10">
            </div>
        </p>

    </div>

    <br />

    <script>
       

        var counter = new ExpressQuiz.CountDown({
            seconds: "@Model.EstimatedTime",
            onUpdateStatus: function(sec) {
                $("#pTimeLeft").text("Time left: " + sec);
            },
            onCounterEnd: function() {
                
                sendResults();
            }
        });

        $(document).ready(function () {

            ExpressQuiz.Utils.togglePreventLeavingPage(true);
           // togglePreventLeavingPage(true);

            $.ajax({
                url: "/ActiveQuiz/GetQuiz/" + "@Model.Quiz.Id",
                type: "GET",

            })
                .done(function (results) {
                    load(results);
                   
                  
                });


            $("#pTimeLeft").text("Time left: " + '@Model.EstimatedTime');
            counter.start();

           
        });



        $("#done").click(function () {
            sendResults();

        });

        function sendResults() {
            var result = {};
            result.QuizId = "@Model.Quiz.Id";
            result.Answers = runtime.getResult();
            result.EllapsedTime = counter.getRemainingTime();

            $.ajax({
                url: '/ActiveQuiz/PostResult/',
                async: false,
                type: "POST",
                data: JSON.stringify(result),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                error: function (jqXHR, textStatus, errorThrown) {
                    alert(jqXHR + "-" + textStatus + "-" + errorThrown);
                },
                success: function (data, textStatus, jqXHR) {
                    var url = '/QuizReview/Index/' + data;
                    ExpressQuiz.Utils.togglePreventLeavingPage(false);
                    window.location.href = url;
                }

            });
        }

        function loadQuestion(question, answerId) {

            $("#answers").empty();

            for (var i = 0; i < question.Answers.length; i++) {
                var checked = answerId == question.Answers[i].Id ? "checked" : "";

                var div = $(" <div class='radio'/>");
                var label = $("<label/>");
                var input = $("<input type='radio' " + checked + " name='optionsRadios' id=" + i + " value=" + i + ">");


                label.append(input);
                label.append(question.Answers[i].Text);

                div.append(label);
                $("#answers").append(div);
            }

            $('input[type=radio][name=optionsRadios]').on('change', function() {
                var a = $('input[name=optionsRadios]:checked', '#answers').val();
                runtime.setAnswer(runtime.currentQuestionIndex, a);
                updateProgress();
            });

            $("#content").append($("<textarea class='pagedown hidden' />"));

            $("textarea.pagedown").empty();
            $("textarea.pagedown").pagedownBootstrap({
                'sanatize': true
            });
            $("#wmd-input-0").text(question.Text);
            $(".wmd-button-bar").hide();
           
        }

        var runtime = undefined;

        function load(quiz) {

            runtime = new ExpressQuiz.Runtime(quiz);

            $('#page-selection').bootpag({
                total: runtime.quiz.Questions.length,
                page: 1,
                maxVisible: 5,
                next: "next",
                prev: "previous",
            }).on("page", function(event, num) {
                var a = $('input[name=optionsRadios]:checked', '#answers').val();

                runtime.setAnswer(runtime.currentQuestionIndex, a);

                runtime.setActiveQuestion(num - 1);
                var question = runtime.getActiveQuestion(num - 1);
                loadQuestion(question, runtime.getAnswer(runtime.currentQuestionIndex));
               

            });

            loadQuestion(quiz.Questions[0]);
           
          
        }


        function updateProgress() {
            var value = runtime.getProgress();
            $('.progress-bar').css('width', value + '%').attr('aria-valuenow', value);
        }


        //function togglePreventLeavingPage(enable) {
        //    if (enable) {
        //        $(window).on('beforeunload', function () {

        //            return 'All progress will be lost if you leave or refresh the page.';
        //        });
        //    } else {
        //        $(window).off('beforeunload');
        //    }
        //}
        
    </script>

</div>
