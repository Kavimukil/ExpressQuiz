@model ExpressQuiz.ViewModels.EditQuestionViewModel



<div>
    <ul class="breadcrumb" >
        <li>
            @Html.ActionLink("Quiz", "Edit", new {id = Model.QuizId})
        </li>

        <li class="active">Question</li>
    </ul>

</div>

@using (Ajax.BeginForm("EditQuestion", "Quizzes", new AjaxOptions
{
    UpdateTargetId = "content",
    HttpMethod = "Post",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "applyValidation",
    OnFailure = "ExpressQuiz.Ui.handleAjaxError",
    OnBegin = "beforePost",
}))
{
    <div class="form-horizontal">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Question.QuestionId)
        @Html.HiddenFor(model => model.Order)
        @Html.HiddenFor(model => model.QuizId)
        @Html.HiddenFor(model => model.Question.Points)

        <div class="form-group">
            @Html.LabelFor(model => model.Question.Text, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question.Text, new {htmlAttributes = new {@class = "form-control pagedown", @rows = 10}})
                @Html.ValidationMessageFor(model => model.Question.Text, "", new {@class = "text-danger"})



            </div>
        </div>

        @if (Model.IsTimeable)
        {
            <div class="form-group">

                @Html.LabelFor(model => model.Question.EstimatedTime, new {@class = "control-label col-md-2"})
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Question.EstimatedTime, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Question.EstimatedTime, "", new {@class = "text-danger"})
                </div>

            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.Question.EstimatedTime)
        }

        @if (Model.AllowPoints)
        {
            <div class="form-group">

                @Html.LabelFor(model => model.Question.Points, new {@class = "control-label col-md-2"})
                <div class="col-md-2">
                    <input id="points" class="form-control" data-slider-id='ex1Slider' type="text" data-slider-min="1" data-slider-max="10"
                           data-slider-step="0.1" data-slider-value="@Model.Question.Points" />


                </div>

            </div>
        }
        <div class="form-group">

            <div class="row">
                <div class="col-md-4">

                    @Ajax.ActionLink("Add answer", "CreateAnswer", "Quizzes", new {questionId = Model.Question.QuestionId, orderId = Model.Question.AnswerCount}, new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "Get",
                        UpdateTargetId = "content",
                        OnSuccess = "applyValidation",
                        OnFailure = "ExpressQuiz.Ui.handleAjaxError"
                    }, new {@class = "btn btn-primary"})


                    <button type="submit" class="btn btn-primary has-spinner">
                        <span class="spinner"><i class="fa fa-refresh fa-spin"></i></span>
                        Save
                    </button>

                </div>
            </div>

        </div>

        <hr />

        <table id="answersTbl" class="table table-striped table-hover table-bordered">
            <thead>
                <tr>
                    <td></td>
                    <td>Answer</td>
                    <td>Is correct</td>
                </tr>

            </thead>
            <tbody>
                @{

                    foreach (var a in Model.Question.Answers.OrderBy(x => x.OrderId))
                    {
                        <tr id="@a.AnswerId">
                            <td class="dragHandle"></td>
                            <td>
                                @a.Text
                            </td>
                            <td>
                                @a.IsCorrect
                            </td>

                            <td>
                                @Ajax.ActionLink("Edit", "EditAnswer", "Quizzes", new {id = a.AnswerId}, new AjaxOptions
                                {
                                    InsertionMode = InsertionMode.Replace,
                                    HttpMethod = "Get",
                                    UpdateTargetId = "content",
                                    OnSuccess = "applyValidation",
                                    OnFailure = "ExpressQuiz.Ui.handleAjaxError"
                                })

                            </td>
                            <td>
                                <a href="#" data-id="@a.AnswerId" class="delete-answer">Delete</a>

                            </td>
                        </tr>
                    }
                }
            </tbody>

        </table>

    </div>
}




<script>
    $(function() {


        ExpressQuiz.Ui.toTextEditor($("textarea.pagedown"));

        ExpressQuiz.Ui.toReorderableTable($("#answersTbl"), $("#Order"));

        ExpressQuiz.Ui.toSlider($('#points'), $('#' + '@Html.IdFor(m => m.Question.Points)'));

        $('.delete-answer').click(function() {

            $.ajax({
                url: "/Quizzes/DeleteAnswer/" + this.getAttribute("data-id"),
                type: 'POST',
                headers: ExpressQuiz.AjaxHelper.createRequestionVerificationTokenHeader(),
                success: function(result) {
                    $("#content").empty().html(result);

                },
                error: function(jqXHR, textStatus, errorThrown) {
                    ExpressQuiz.Ui.handleAjaxError(jqXHR);

                }
            });

            return false;
        });
    });

</script>